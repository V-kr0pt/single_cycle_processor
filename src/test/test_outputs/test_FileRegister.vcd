$date
	Thu Aug 22 11:43:08 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module registerFile_testbench $end
$var wire 8 ! out_b [7:0] $end
$var wire 8 " out_a [7:0] $end
$var reg 3 # addr_a [2:0] $end
$var reg 3 $ addr_b [2:0] $end
$var reg 1 % clk $end
$var reg 8 & d_in [7:0] $end
$var reg 1 ' load $end
$var reg 1 ( reset $end
$var reg 1 ) reset_all $end
$var integer 32 * i [31:0] $end
$scope module test_register $end
$var wire 3 + addr_a [2:0] $end
$var wire 3 , addr_b [2:0] $end
$var wire 1 % clk $end
$var wire 8 - d_in [7:0] $end
$var wire 1 ' load $end
$var wire 1 ( reset $end
$var wire 1 ) reset_all $end
$var reg 8 . val_a [7:0] $end
$var reg 8 / val_b [7:0] $end
$var integer 32 0 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 0
bx /
bx .
b0 -
b0 ,
b0 +
bx *
0)
0(
0'
b0 &
0%
b0 $
b0 #
bx "
bx !
$end
#5
1%
#10
0%
1)
#15
b0 !
b0 /
b0 "
b0 .
b1000 0
1%
#20
0%
b10101010 &
b10101010 -
1'
b0 *
0)
#25
b10101010 !
b10101010 /
b10101010 "
b10101010 .
1%
#30
0%
0'
#35
1%
#40
b0 "
b0 .
0%
b10101011 &
b10101011 -
1'
b1 #
b1 +
b1 *
#45
b10101011 "
b10101011 .
1%
#50
0%
0'
#55
1%
#60
b0 "
b0 .
0%
b10101100 &
b10101100 -
1'
b10 #
b10 +
b10 *
#65
b10101100 "
b10101100 .
1%
#70
0%
0'
#75
1%
#80
b0 "
b0 .
0%
b10101101 &
b10101101 -
1'
b11 #
b11 +
b11 *
#85
b10101101 "
b10101101 .
1%
#90
0%
0'
#95
1%
#100
b0 "
b0 .
0%
b10101110 &
b10101110 -
1'
b100 #
b100 +
b100 *
#105
b10101110 "
b10101110 .
1%
#110
0%
0'
#115
1%
#120
b0 "
b0 .
0%
b10101111 &
b10101111 -
1'
b101 #
b101 +
b101 *
#125
b10101111 "
b10101111 .
1%
#130
0%
0'
#135
1%
#140
b0 "
b0 .
0%
b10110000 &
b10110000 -
1'
b110 #
b110 +
b110 *
#145
b10110000 "
b10110000 .
1%
#150
0%
0'
#155
1%
#160
b0 "
b0 .
0%
b10110001 &
b10110001 -
1'
b111 #
b111 +
b111 *
#165
b10110001 "
b10110001 .
1%
#170
0%
0'
#175
1%
#180
b10101011 !
b10101011 /
b0 "
b0 .
0%
1(
b1 $
b1 ,
b0 #
b0 +
b1000 *
#185
1%
#190
0%
0(
#195
1%
#200
0%
#205
1%
#210
0%
b11001100 &
b11001100 -
#215
b11001100 "
b11001100 .
1%
b0 *
1'
#220
0%
#225
1%
b1 *
#230
0%
#235
b11001100 !
b11001100 /
b11001100 "
b11001100 .
1%
b10 *
b1 #
b1 +
#240
0%
#245
b11001100 "
b11001100 .
1%
b11 *
b10 #
b10 +
#250
0%
#255
b11001100 "
b11001100 .
1%
b100 *
b11 #
b11 +
#260
0%
#265
b11001100 "
b11001100 .
1%
b101 *
b100 #
b100 +
#270
0%
#275
b11001100 "
b11001100 .
1%
b110 *
b101 #
b101 +
#280
0%
#285
b11001100 "
b11001100 .
1%
b111 *
b110 #
b110 +
#290
0%
#295
b11001100 "
b11001100 .
1%
b1000 *
b111 #
b111 +
#300
0%
0'
#305
1%
#310
0%
1)
#315
b0 !
b0 /
b0 "
b0 .
b1000 0
1%
#320
0%
0)
#325
1%
#330
0%
#335
1%
#340
0%
#345
1%
#350
0%
#355
1%
#360
0%
#365
1%
#370
0%
